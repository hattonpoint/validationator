"use strict";var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(a){return typeof a}:function(a){return a&&"function"==typeof Symbol&&a.constructor===Symbol&&a!==Symbol.prototype?"symbol":typeof a},validate=require("./validate"),matchesAny=require("./utilities/matchesAny");module.exports=[{type:"array",rules:function(a,b,c){var d=b.maxLength,e=b.minLength,f=b.allChildren,g=b.children,h=b.includes,i=b.notIncludes;if(!Array.isArray(a))throw new Error("Expected "+c+" to be type array. Got "+("undefined"==typeof a?"undefined":_typeof(a)));if("undefined"!=typeof e&&a.length<e)throw new Error("Array length is less than minimum");if("undefined"!=typeof d&&a.length>d)throw new Error("Array length is more than maximum");if("undefined"!=typeof h&&!JSON.stringify(a).includes(h))throw new Error("Array "+c+" does not include required string: "+h);if("undefined"!=typeof i&&JSON.stringify(a).includes(i))throw new Error("Array "+c+" includes blacklisted string: "+i);if(f&&a.forEach(function(b,c){return validate(a[c],f,{name:c})}),g){if(g.length!==a.length)throw new Error("validation and array for "+c+" are out of sync.");if(!Array.isArray(g))throw new Error(c+".children must be an array.");g.forEach(function(b,c){validate(a[c],b,{name:c})})}}},{type:"function",rules:function(a,b,c){if("function"!=typeof a)throw new Error("Expected "+c+" to be type function. Got "+("undefined"==typeof a?"undefined":_typeof(a)))}},{type:"object",rules:function(a,b,c){var d=b.requiredKeys,e=b.children,f=b.minLength,g=b.maxLength,h=b.allChildren,i=b.includes,j=b.notIncludes,k=Object.keys(a);if("object"!==("undefined"==typeof a?"undefined":_typeof(a))||Array.isArray(a))throw new Error("Expected "+c+" to be type object. Got "+("undefined"==typeof a?"undefined":_typeof(a))+" Array.isArray? "+Array.isArray(a));if(d&&d.forEach(function(a){if(!k.find(function(b){return b===a}))throw new Error("Missing required key: "+a)}),"undefined"!=typeof i&&!JSON.stringify(a).includes(JSON.stringify(i)))throw new Error("Object "+c+" does not include required string: "+i);if("undefined"!=typeof j&&JSON.stringify(a).includes(JSON.stringify(j)))throw new Error("Object "+c+" includes blacklisted string: "+j);if("undefined"!=typeof f&&k.length<f)throw new Error("Object length is less than minimum");if("undefined"!=typeof g&&k.length>g)throw new Error("Object length is more than maximum");if(h&&k.forEach(function(b){return validate(a[b],h,{name:b})}),e){if("object"!==("undefined"==typeof e?"undefined":_typeof(e))||Array.isArray(e))throw new Error("Expected "+c+" validation children to be type object. Got "+("undefined"==typeof a?"undefined":_typeof(a))+" Array.isArray? "+Array.isArray(a));var l=Object.keys(e);if(l.length!==k.length)throw new Error("keys and validation model for "+c+" are out of sync. Did you mean to use allChildren? There are "+l.length+" entries to the inputModel and "+k.length+" paramerters.");k.forEach(function(a){if(!matchesAny(a,l))throw new Error("The valueKey '"+a+"' has not been included "+c+" children")}),l.forEach(function(b){validate(a[b],e[b],b)})}}},{type:"string",rules:function(a,b,c){var d=b.maxLength,e=b.minLength,f=b.regEx,g=b.includes,h=b.notIncludes;if("string"!=typeof a)throw new Error("Expected "+c+" to be type string. Got "+("undefined"==typeof a?"undefined":_typeof(a)));if("undefined"!=typeof e&&a.length<e)throw new Error("String length is less than minimum");if("undefined"!=typeof d&&a.length>d)throw new Error("String length is more than maximum");if("undefined"!=typeof f&&!f.test(a))throw new Error("String does not match the validation regEx.");if("undefined"!=typeof g&&!a.includes(g))throw new Error("String "+c+" does not include required string: "+g);if("undefined"!=typeof h&&a.includes(h))throw new Error("String "+c+" includes blacklisted string: "+h)}},{type:"number",rules:function(a,b,c){var d=b.max,e=b.min,f=b.decimals,g=b.regEx;if("number"!=typeof a)throw new Error("Expected "+c+" to be type number. Got "+("undefined"==typeof a?"undefined":_typeof(a)));if("undefined"!=typeof e&&a<e)throw new Error("Number is less than minimum");if("undefined"!=typeof d&&a>d)throw new Error("Number is more than maximum");if("undefined"!=typeof f&&function(){var b=a.toString().split(".");if(b[1])return b[1].length>f}())throw new Error("Number: "+a+" has more than "+f+" decimails.");if("undefined"!=typeof g&&!g.test(a))throw new Error("String does not match the validation regEx.")}},{type:"boolean",rules:function(a,b,c){if("boolean"!=typeof a)throw new Error("Expected "+c+" to be type boolean. Got "+("undefined"==typeof a?"undefined":_typeof(a)))}},{type:"email",rules:function(a,b,c){validate(a,{type:"string",maxLength:50,regEx:/^(([^<>()[\]\\.,;:\s@"]+(\.[^<>()[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/},{name:c})}}];